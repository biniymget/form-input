{"ast":null,"code":"var _jsxFileName = \"/home/biniyam/Documents/personal/forminput/new/form-input/src/components/formulaInputs/FormulaInput.js\",\n  _s = $RefreshSig$();\n// src/components/FormulaInput/FormulaInput.js\nimport React, { useState } from 'react';\nimport useFormulaStore from '../../store/store';\nimport { useAutocomplete } from '../../hooks/useAutocomplete';\nimport './FormulaInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormulaInput = () => {\n  _s();\n  const {\n    formula,\n    addToken,\n    removeToken,\n    updateToken\n  } = useFormulaStore();\n  const [inputValue, setInputValue] = useState('');\n  const [editingIndex, setEditingIndex] = useState(null);\n  const {\n    data: suggestions\n  } = useAutocomplete(inputValue);\n  const handleAddToken = value => {\n    if (value.trim()) {\n      addToken({\n        type: 'tag',\n        value\n      });\n      setInputValue('');\n    }\n  };\n  const handleAddOperand = operand => {\n    addToken({\n      type: 'operand',\n      value: operand\n    });\n  };\n  const handleEditToken = (index, newValue) => {\n    updateToken(index, newValue);\n    setEditingIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formula-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formula-tokens\",\n      children: formula.map((token, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"token\",\n        children: token.type === 'tag' ? editingIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: token.value,\n          onChange: e => updateToken(index, e.target.value),\n          onBlur: () => setEditingIndex(null),\n          autoFocus: true,\n          className: \"edit-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"[\", token.value, \"]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingIndex(index),\n            className: \"edit-btn\",\n            children: \"\\u270E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeToken(index),\n            className: \"delete-btn\",\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: token.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleAddToken(inputValue),\n        placeholder: \"Add tag\",\n        className: \"tag-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddToken(inputValue),\n        className: \"add-btn\",\n        children: \"Add Tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), ['+', '-', '*', '/', 'SUM'].map(operand => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddOperand(operand),\n        className: \"operand-btn\",\n        children: operand\n      }, operand, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), suggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAddToken(suggestion.name),\n          className: \"suggestion-item\",\n          children: [suggestion.name, \" (\", suggestion.category, \")\"]\n        }, suggestion.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(FormulaInput, \"ykDwayGHHjSZlEk8HodwCsVx4bQ=\", false, function () {\n  return [useFormulaStore, useAutocomplete];\n});\n_c = FormulaInput;\nexport default FormulaInput;\nvar _c;\n$RefreshReg$(_c, \"FormulaInput\");","map":{"version":3,"names":["React","useState","useFormulaStore","useAutocomplete","jsxDEV","_jsxDEV","FormulaInput","_s","formula","addToken","removeToken","updateToken","inputValue","setInputValue","editingIndex","setEditingIndex","data","suggestions","handleAddToken","value","trim","type","handleAddOperand","operand","handleEditToken","index","newValue","className","children","map","token","onChange","e","target","onBlur","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onKeyPress","key","placeholder","suggestion","name","category","id","_c","$RefreshReg$"],"sources":["/home/biniyam/Documents/personal/forminput/new/form-input/src/components/formulaInputs/FormulaInput.js"],"sourcesContent":["// src/components/FormulaInput/FormulaInput.js\nimport React, { useState } from 'react';\nimport useFormulaStore from '../../store/store';\nimport { useAutocomplete } from '../../hooks/useAutocomplete';\nimport './FormulaInput.css';\n\nconst FormulaInput = () => {\n  const { formula, addToken, removeToken, updateToken } = useFormulaStore();\n  const [inputValue, setInputValue] = useState('');\n  const [editingIndex, setEditingIndex] = useState(null);\n  const { data: suggestions } = useAutocomplete(inputValue);\n\n  const handleAddToken = (value) => {\n    if (value.trim()) {\n      addToken({ type: 'tag', value });\n      setInputValue('');\n    }\n  };\n\n  const handleAddOperand = (operand) => {\n    addToken({ type: 'operand', value: operand });\n  };\n\n  const handleEditToken = (index, newValue) => {\n    updateToken(index, newValue);\n    setEditingIndex(null);\n  };\n\n  return (\n    <div className=\"formula-input-container\">\n      <div className=\"formula-tokens\">\n        {formula.map((token, index) => (\n          <div key={index} className=\"token\">\n            {token.type === 'tag' ? (\n              editingIndex === index ? (\n                <input\n                  type=\"text\"\n                  value={token.value}\n                  onChange={(e) => updateToken(index, e.target.value)}\n                  onBlur={() => setEditingIndex(null)}\n                  autoFocus\n                  className=\"edit-input\"\n                />\n              ) : (\n                <div className=\"tag\">\n                  <span>[{token.value}]</span>\n                  <button onClick={() => setEditingIndex(index)} className=\"edit-btn\">âœŽ</button>\n                  <button onClick={() => removeToken(index)} className=\"delete-btn\">x</button>\n                </div>\n              )\n            ) : (\n              <span>{token.value}</span>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-controls\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          onKeyPress={(e) => e.key === 'Enter' && handleAddToken(inputValue)}\n          placeholder=\"Add tag\"\n          className=\"tag-input\"\n        />\n        <button onClick={() => handleAddToken(inputValue)} className=\"add-btn\">Add Tag</button>\n        {['+', '-', '*', '/', 'SUM'].map((operand) => (\n          <button key={operand} onClick={() => handleAddOperand(operand)} className=\"operand-btn\">\n            {operand}\n          </button>\n        ))}\n      </div>\n      {suggestions && (\n        <div className=\"suggestions\">\n          <h4>Suggestions</h4>\n          <ul>\n            {suggestions.map((suggestion) => (\n              <li\n                key={suggestion.id}\n                onClick={() => handleAddToken(suggestion.name)}\n                className=\"suggestion-item\"\n              >\n                {suggestion.name} ({suggestion.category})\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormulaInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}